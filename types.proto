syntax = "proto2";

package manta;

import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";

enum MatchType {
  option (gogoproto.goproto_enum_prefix) = false;

  MatchEqual = 0;
  MatchNotEqual = 1;
  MatchRegexp = 2;
  MatchNotRegexp = 3;
}

message Matcher {
  required MatchType type = 1;
  required string name = 2;
  required string value = 3;
}

message Organization {
  required uint64 id = 1 [(gogoproto.customname) = "ID", (gogoproto.casttype) = "ID"];
  required google.protobuf.Timestamp created = 2 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
  required google.protobuf.Timestamp updated = 3 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];

  // store some information about this node
  map<string, string> annotations = 4;

  required string name = 5;
  required string desc = 6;
}

message Node {
  required uint64 id = 1 [(gogoproto.customname) = "ID", (gogoproto.casttype) = "ID"];
  required google.protobuf.Timestamp created = 2 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
  required google.protobuf.Timestamp updated = 3 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];

  required uint64 orgID = 4 [(gogoproto.casttype) = "ID", (gogoproto.customname) = "OrgID"];

  required string address = 5;
  required string hostname = 6;
  required string env = 7;
  required string status = 8;
  required string region = 9;

  map<string, string> annotations = 10;
}

message NotificationEndpoint {
  required uint64 id = 1 [(gogoproto.customname) = "ID", (gogoproto.casttype) = "ID"];
  required google.protobuf.Timestamp created = 2 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
  required google.protobuf.Timestamp updated = 3 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];

  required string name = 4;
  required string desc = 5;

  required string url = 6;
  required string method = 7;
  map<string, string> headers = 8;
  required string content_template = 9;
}

message User {
  required uint64 id = 1 [(gogoproto.customname) = "ID", (gogoproto.casttype) = "ID"];
  required google.protobuf.Timestamp created = 2 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
  required google.protobuf.Timestamp updated = 3 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];

  required string name = 4;
  required string nickname = 5;

  map<string, string> annotations = 6;
}

message Template {
  required uint64 id = 1 [(gogoproto.customname) = "ID", (gogoproto.casttype) = "ID"];
  required google.protobuf.Timestamp created = 2 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
  required google.protobuf.Timestamp updated = 3 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];

  required string name = 4;
  required string desc = 5;

  repeated Matcher matchers = 6 [(gogoproto.nullable) = false];
}

message Resource {
  required string type = 1 [(gogoproto.casttype) = "ResourceType"];
  required uint64 id = 2 [(gogoproto.casttype) = "ID", (gogoproto.customname) = "ID"];
  required uint64 org_id = 3 [(gogoproto.casttype) = "ID", (gogoproto.customname) = "OrgID"];
}

message Permission {
  required string action = 1 [(gogoproto.casttype) = "Action"];
  required Resource resource = 2 [(gogoproto.nullable) = false];
}

message Authorization {
  required uint64 id = 1 [(gogoproto.customname) = "ID", (gogoproto.casttype) = "ID"];
  required google.protobuf.Timestamp created = 2 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
  required google.protobuf.Timestamp updated = 3 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];

  required uint64 uid = 4 [(gogoproto.customname) = "UID", (gogoproto.casttype) = "ID"];
  required string token = 5;
  required string status = 6;

  // add more about permissions
  repeated Permission permissions = 7 [(gogoproto.nullable) = false];
}

// checks
message Threshold {
  required string type = 1;
  optional double value = 2;

  // for inside and outside
  optional double min = 3;
  optional double max = 4;
}

message Condition {
  required string status = 1;
  optional google.protobuf.Duration pending = 2 [(gogoproto.stdduration) = true, (gogoproto.nullable) = false];
  optional Threshold threshold = 3 [(gogoproto.nullable) = false];
}

message Check {
  required uint64 id = 1 [(gogoproto.customname) = "ID", (gogoproto.casttype) = "ID"];
  required google.protobuf.Timestamp created = 2 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
  required google.protobuf.Timestamp updated = 3 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];

  required string name = 4;
  required string desc = 5;
  required uint64 orgID = 6 [(gogoproto.casttype) = "ID"];
  required string expr = 7;
  required string status = 8;
  required string cron = 9;

  repeated Condition conditions = 10 [(gogoproto.nullable) = false];

  required uint64 Datasource = 11 [(gogoproto.casttype) = "ID"];
}

message Alert {
  required uint64 id = 1 [(gogoproto.customname) = "ID", (gogoproto.casttype) = "ID"];
  required google.protobuf.Timestamp created = 2 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
  required google.protobuf.Timestamp updated = 3 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];

  required string status = 4;
  map<string, string> labels = 5 [(gogoproto.casttype) = "github.com/f1shl3gs/manta/pkg/labelset.LabelSet", (gogoproto.castkey) = "github.com/f1shl3gs/manta/pkg/labelset.LabelName", (gogoproto.castvalue) = "github.com/f1shl3gs/manta/pkg/labelset.LabelValue"];
  map<string, string> annotations = 6;
  required google.protobuf.Timestamp startsAt = 7 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
  required google.protobuf.Timestamp endsAt = 8 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
}

message Inhibition {
  required uint64 id = 1 [(gogoproto.customname) = "ID", (gogoproto.casttype) = "ID"];
  required google.protobuf.Timestamp created = 2 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
  required google.protobuf.Timestamp updated = 3 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];

  required string name = 4;
  required string desc = 5;
  required uint64 orgID = 6 [(gogoproto.customname) = "OrgID", (gogoproto.casttype) = "ID"];

  // after Expiration this inhibition will not works anymore
  required google.protobuf.Timestamp expiration = 7 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];

  // match event with labels, wildcard is support for value
  repeated Matcher matchers = 8;
}

message InhibitionStatus {
  required google.protobuf.Timestamp when = 1 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
  required uint64 inhibitionID = 2 [(gogoproto.customname) = "InhibitionID", (gogoproto.casttype) = "ID"];
  required string name = 3;
  required string desc = 4;
}

message Acknowledgement {
  required string username = 1;
  required string desc = 2;

  required google.protobuf.Timestamp when = 3 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
}

message EventStatus {
  // pending, firing or resolve
  required string phase = 1;

  // acknowledgements
  repeated Acknowledgement acks = 2 [(gogoproto.nullable) = false];

  // inhibitions
  repeated InhibitionStatus inhibitions = 3 [(gogoproto.nullable) = false];
}

message Event {
  required uint64 id = 1 [(gogoproto.customname) = "ID", (gogoproto.casttype) = "ID"];
  required google.protobuf.Timestamp start = 2 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
  required google.protobuf.Timestamp end = 3 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];

  required string name = 4 ;
  required uint64 orgID = 5 [(gogoproto.customname) = "OrgID", (gogoproto.casttype) = "ID"];

  map<string, string> labels = 6;
  map<string, string> annotations = 7;

  optional EventStatus status = 8 [(gogoproto.nullable) = false];
}

message Notification {
  message Result {
    required string endpoint = 1;
    required string error = 2;
  }

  required uint64 id = 1 [(gogoproto.customname) = "ID", (gogoproto.casttype) = "ID"];
  required uint64 uid = 2 [(gogoproto.customname) = "UID", (gogoproto.casttype) = "ID"];
  required google.protobuf.Timestamp created = 3 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];

  repeated uint64 events = 4;
  repeated Result results = 5 [(gogoproto.nullable) = false];
}

message Collection {
  required uint64 id = 1 [(gogoproto.customname) = "ID", (gogoproto.casttype) = "ID"];
  required google.protobuf.Timestamp created = 2 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
  required google.protobuf.Timestamp updated = 3 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];

  required string name = 4;
  required string desc = 5;
  required uint64 orgID = 6 [(gogoproto.casttype) = "ID", (gogoproto.customname) = "OrgID"];

  // not decided now
  required string type = 7;
  required string content = 8;
}

message Task {
  required uint64 id = 1 [(gogoproto.customname) = "ID", (gogoproto.casttype) = "ID"];
  required google.protobuf.Timestamp created = 2 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
  required google.protobuf.Timestamp updated = 3 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];

  // store some data for this task
  map<string, string> annotations = 4;

  required string type = 5;
  required string status = 6;
  required uint64 orgID = 7 [(gogoproto.customname) = "OrgID", (gogoproto.casttype) = "ID"];
  required uint64 ownerID = 8 [(gogoproto.customname) = "OwnerID", (gogoproto.casttype) = "ID"];
  required string cron = 9;

  // status
  required google.protobuf.Timestamp latestCompleted = 10 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
  required google.protobuf.Timestamp latestScheduled = 11 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
  required google.protobuf.Timestamp latestSuccess = 12 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
  required google.protobuf.Timestamp latestFailure = 13 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
  required string lastRunStatus = 14;
  required string lastRunError = 15;
}

message RunLog {
  required uint64 runID = 1 [(gogoproto.casttype) = "ID"];
  required string time = 2;
  required string message = 3;
}

message Run {
  required uint64 id = 1 [(gogoproto.customname) = "ID", (gogoproto.casttype) = "ID"];
  required uint64 taskID = 2 [(gogoproto.casttype) = "ID"];

  required google.protobuf.Timestamp scheduledFor = 3 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
  required google.protobuf.Timestamp runAt = 4 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
  required google.protobuf.Timestamp startedAt = 5 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
  required google.protobuf.Timestamp finishedAt = 6 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];

  required string status = 7;
  repeated RunLog logs = 8 [(gogoproto.nullable) = false];
}

message ScrapeTarget {
  required uint64 id = 1 [(gogoproto.customname) = "ID", (gogoproto.casttype) = "ID"];
  required uint64 orgID = 2 [(gogoproto.customname) = "OrgID", (gogoproto.casttype) = "ID"];
  required string target = 5;
  map<string, string> labels = 6;
}

message Loki {
  required string url = 1;
}

message Jaeger {
  required string url = 1;
}

message Prometheus {
  required string url = 1;
}

message Datasource {
  required uint64 id = 1 [(gogoproto.customname) = "ID", (gogoproto.casttype) = "ID"];
  required google.protobuf.Timestamp created = 2 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
  required google.protobuf.Timestamp updated = 3 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];

  required string name = 4;
  required string desc = 5;
  required string type = 6;
  required uint64 orgID = 7 [(gogoproto.customname) = "OrgID", (gogoproto.casttype) = "ID"];

  oneof config {
    Loki loki = 8;
    Jaeger jaeger = 9;
    Prometheus prometheus = 10;
  }
}

// dashboard
message Query {
  required string key = 1;
  required string expr = 2;
  required string legend = 3;
}

message YAxis {
  required string prefix = 1;
  required string suffix = 2;
  required string format = 3;
}

message XAxis {
  required string prefix = 1;
  required string suffix = 2;
  required string format = 3;
}

message Axis {
  required string Bounds = 1;
  required string label = 2;
  required string prefix = 3;
  required string suffix = 4;
}

message Axes {
  optional Axis x = 1 [(gogoproto.nullable) = false];
  optional Axis y = 2 [(gogoproto.nullable) = false];
}

message GaugeViewProperties {
  required string type = 1;

  optional Axes axes = 2 [(gogoproto.nullable) = false];
  repeated Query queries = 3 [(gogoproto.nullable) = false];
}

message XYViewProperties {
  required string type = 1;

  optional Axes axes = 2 [(gogoproto.nullable) = false];
  repeated Query queries = 3 [(gogoproto.nullable) = false];

  required string timeFormat = 4;
  required string xColumn = 5;
  required string yColumn = 6;
  required string hoverDimension = 7;
  required string position = 8;
  required string geom = 9;
}

message SingleStatView {
  required string type = 1;
}

message LinePlusSingleStatView {
  required string type = 1;
}

message MarkdownView {
  required string type = 1;
  required string content = 2;
}

message Cell {
  required uint64 id = 1 [(gogoproto.customname) = "ID", (gogoproto.casttype) = "ID"];

  optional string name = 2;
  optional string description = 3;
  optional int32 x = 4 [(gogoproto.jsontag) = "x"];
  optional int32 y = 5 [(gogoproto.jsontag) = "y"];
  optional int32 w = 6;
  optional int32 h = 7;

  optional int32 minH = 8 [(gogoproto.nullable) = true];
  optional int32 minW = 9 [(gogoproto.nullable) = true];
  optional int32 maxW = 10 [(gogoproto.nullable) = true];

  oneof viewProperties {
    GaugeViewProperties gauge = 11;
    XYViewProperties xy = 12 [(gogoproto.customname) = "XY"];
    SingleStatView singleStat = 13;
    LinePlusSingleStatView linePlusSingleStat = 14;
    MarkdownView markdown = 15;
  };
}

message Dashboard {
  required uint64 id = 1 [(gogoproto.customname) = "ID", (gogoproto.casttype) = "ID"];
  required google.protobuf.Timestamp created = 2 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
  required google.protobuf.Timestamp updated = 3 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];

  optional string name = 4;
  optional string desc = 5;
  required uint64 orgID = 6 [(gogoproto.customname) = "OrgID", (gogoproto.casttype) = "ID"];

  repeated Cell cells = 7 [(gogoproto.nullable) = false];
}

message Change {
  required string type = 1;
  required uint64 resource_id = 2 [(gogoproto.customname) = "ResourceID", (gogoproto.casttype) = "ID"];
  required string resource_type = 3;
  required uint64 organization_id = 4 [(gogoproto.customname) = "OrgID", (gogoproto.casttype) = "ID"];
  required string organization = 5;
  required uint64 user_id = 6 [(gogoproto.customname) = "UserID", (gogoproto.casttype) = "ID"];
  required string username = 7;
  optional bytes data = 8;
  required google.protobuf.Timestamp time = 9 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
}

message UserResourceMapping {
  required uint64 user_id = 1 [(gogoproto.customname) = "UserID", (gogoproto.casttype) = "ID"];
  required string user_type = 2 [(gogoproto.customname) = "UserType", (gogoproto.casttype) = "string"];
  required int32 mapping_type = 3 [(gogoproto.customname) = "MappingType", (gogoproto.casttype) = "MappingType"];
  required string resource_type = 4 [(gogoproto.customname) = "ResourceType", (gogoproto.casttype) = "ResourceType"];
  required uint64 resource_id = 5 [(gogoproto.customname) = "ResourceID", (gogoproto.casttype) = "ID"];
}

message Otcl {
  required uint64 id = 1 [(gogoproto.customname) = "ID", (gogoproto.casttype) = "ID"];
  required google.protobuf.Timestamp created = 2 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
  required google.protobuf.Timestamp updated = 3 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];

  required string name = 4;
  required string desc = 5;
  required uint64 orgID = 6 [(gogoproto.casttype) = "ID", (gogoproto.customname) = "OrgID"];

  // not decided now
  required string type = 7;
  required string content = 8;
}

// todo: AlertAction
// webhooks, notification
message AlertAction {

}