package web

import (
	"net/http"

	"go.uber.org/zap"
)

const (
	ProfilePrefix     = `/api/v1/profile`
	ProfileRenderPath = `/api/v1/profile/render`

	testBody = `{"flamebearer":{"names":["total","runtime/pprof.profileWriter","runtime/pprof.readProfile","runtime.(*profBuf).read","runtime.notetsleepg","runtime.notetsleep_internal","runtime.futexsleep","runtime.futex","runtime/pprof.(*profileBuilder).addCPUData","runtime/pprof.(*profMap).lookup","runtime.makeslice","runtime.mallocgc","runtime.(*mcache).nextFree","runtime.(*mcache).refill","runtime.(*mcentral).cacheSpan","runtime.(*mcentral).grow","runtime.(*mheap).alloc","runtime.systemstack","runtime.(*mheap).alloc.func1","runtime.(*mheap).allocSpan","runtime.mSysStatInc","runtime.nanotime","runtime.mstart","runtime.mstart1","runtime.sysmon","runtime.usleep","runtime.unlockWithRank","runtime.unlock2","runtime.timeSleepUntil","runtime.startm","runtime.notewakeup","runtime.futexwakeup","runtime.retake","runtime.preemptM","runtime.signalM","runtime.tgkill","runtime.getpid","runtime.notetsleep","runtime.netpollinited","runtime.lockWithRank","runtime.lock2","runtime.procyield","runtime.gcTrigger.test","runtime.morestack","runtime.newstack","runtime.gopreempt_m","runtime.osyield","runtime.goschedImpl","runtime.schedule","runtime.gcstopm","runtime.findrunnable","runtime.(*randomEnum).next","runtime.(*gcControllerState).findRunnableGCWorker.func1","runtime.mcall","runtime.park_m","runtime.selparkcommit","runtime.shouldStealTimers","runtime.runqget","runtime.resetspinning","runtime.wakep","runtime.runqempty","runtime.mget","runtime.(*puintptr).set","runtime.pidleget","runtime.nanotime1","runtime.gcMarkWorkAvailable","runtime.stopm","runtime.notesleep","runtime.acquirep","runtime.wirep","runtime.(*mcache).prepareForSweep","runtime.stackcache_clear","runtime.stackpoolfree","runtime.(*mcache).releaseAll","runtime.(*mcentral).uncacheSpan","runtime.(*mspan).sweep","runtime.(*spanSet).push","runtime.(*mheap).freeSpan","runtime.(*mheap).freeSpan.func1","runtime.(*mheap).freeSpanLocked","runtime.(*pageAlloc).free","runtime.(*pageAlloc).update","runtime/internal/sys.LeadingZeros8","runtime.runqsteal","runtime.runqgrab","runtime.runSafePointFn","runtime.releasep","runtime.pidleput","runtime.netpoll","runtime.read","runtime.epollwait","runtime.mput","runtime.checkdead","runtime.checkTimers","runtime.runtimer","runtime.runOneTimer","time.sendTime","time.Now","runtime.selectnbsend","runtime.chansend","runtime.send","runtime.goready","runtime.goready.func1","runtime.ready","runtime.runqput","runtime.casgstatus","runtime.(*waitq).dequeue","runtime.updateTimer0When","runtime.siftdownTimer","runtime.goroutineReady","runtime.fastrand","runtime.execute","runtime.(*randomOrder).start","runtime.(*randomEnum).done","runtime.(*lfstack).empty","runtime.(*gcControllerState).findRunnableGCWorker","runtime.resettimer","runtime.modtimer","runtime.releasem","runtime.gosched_m","runtime.readgstatus","runtime.gcMarkTermination.func4.1","runtime.globrunqget","runtime.(*gQueue).pop","runtime.globrunqput","runtime.(*gQueue).pushBack","runtime.gcBgMarkWorker","runtime.gcBgMarkWorker.func2","runtime.gcDrain","runtime.wbBufFlush","runtime.wbBufFlush.func1","runtime.wbBufFlush1","runtime.findObject","runtime.(*gcWork).putBatch","runtime.pageIndexOf","runtime.markBits.isMarked","runtime.spanOfUnchecked","runtime.scanobject","runtime.spanOf","runtime.spanClass.noscan","runtime.markBits.setMarked","runtime.greyobject","runtime.addb","runtime.(*gcWork).putFast","runtime.(*gcWork).put","runtime.putfull","runtime.(*workbuf).checknonempty","runtime.getempty","runtime.(*lfstack).pop","runtime.(*gcBits).bytep","runtime.(*gcBits).bitp","runtime.(*mspan).base","runtime.arenaIndex","runtime.(*mspan).markBitsForIndex","runtime.pollWork","runtime.markroot","runtime.markrootSpans","runtime.add1","runtime.markrootBlock","runtime.scanblock","runtime.markroot.func1","runtime.suspendG","runtime.castogscanstatus","runtime.scanstack","runtime.tracebackdefers","runtime.shrinkstack","runtime.findfunc","runtime.copystack","runtime.stackfree","runtime.stackalloc","runtime.stackcacherefill","runtime.(*mheap).allocManual","runtime.(*pageAlloc).alloc","runtime.(*pageAlloc).find","runtime.memmove","runtime.putempty","runtime.(*lfstack).push","runtime.gentraceback","runtime.scanstack.func1","runtime.scanframeworker","runtime.(*gcWork).init","runtime.(*stackScanState).putPtr","runtime.getStackMap","runtime.pcdatavalue","runtime.pcvalue","runtime.step","runtime.(*stackScanState).addObject","runtime.getempty.func1","runtime.(*pageCache).alloc","runtime.(*mheap).allocMSpanLocked","runtime.funcspdelta","runtime.readvarint","runtime.(*stackScanState).getPtr","runtime.(*stackScanState).findObject","runtime.isShrinkStackSafe","runtime.(*stackScanState).buildIndex","runtime.binarySearchTree","runtime.heapBitsForAddr","runtime.heapBits.next","runtime.heapBits.bits","runtime.gcFlushBgCredit","runtime.(*gcWork).tryGetFast","runtime.(*gcWork).tryGet","runtime.trygetfull","runtime.(*workbuf).checkempty","runtime.(*gcWork).balance","runtime.handoff","runtime.(*gcControllerState).enlistWorker","runtime.semacquire","runtime.semacquire1","runtime.gopark","runtime.gcWriteBarrierCX","runtime.gcWriteBarrier","runtime.gcMarkDone","runtime.stopTheWorldWithSema","runtime.gcMarkDone.func2","runtime.gcMarkDone.func1","runtime.forEachP","runtime.gcMarkDone.func1.1","runtime.(*gcWork).dispose","runtime.gcMarkTermination","runtime.gcMarkTermination.func4","runtime.(*mheap).freeManual","runtime.divRoundUp","runtime.gcMarkTermination.func3","runtime.startTheWorldWithSema","runtime.procresize","runtime.spanClass.sizeclass","runtime.gcMarkTermination.func1","runtime.gcMark","runtime.cachestats","runtime.purgecachedstats","runtime.mProf_Flush","runtime.mProf_FlushLocked","runtime.add","runtime.(*bucket).mp","runtime.(*memRecordCycle).add","runtime.(*gcControllerState).endCycle","runtime.bgsweep","runtime.sweepone","runtime.newMarkBits","runtime.lock","runtime.(*spanSetBlockAlloc).alloc","runtime.(*headTailIndex).incTail","runtime.(*mspan).countAlloc","runtime.mSysStatDec","runtime.chunkIdx.l1","runtime.(*pallocBits).summarize","runtime.(*fixalloc).free","runtime.(*gcBitsArena).tryAlloc","runtime.(*mheap).nextSpanForSweep","runtime.(*sweepClass).update","runtime.(*spanSet).pop","runtime.(*headTailIndex).cas","runtime.freeSomeWbufs","runtime.freeSomeWbufs.func1","runtime._System","runtime.gogo","net/http.(*conn).serve","net/http.serverHandler.ServeHTTP","net/http.(*ServeMux).ServeHTTP","net/http.HandlerFunc.ServeHTTP","github.com/pyroscope-io/pyroscope/pkg/server.(*Controller).renderHandler","github.com/pyroscope-io/pyroscope/pkg/storage/tree.(*Tree).FlamebearerStruct","runtime.growslice","runtime.memclrNoHeapPointers","runtime.(*pageAlloc).allocRange","github.com/pyroscope-io/pyroscope/pkg/storage/tree.(*Tree).minValue","github.com/pyroscope-io/pyroscope/pkg/storage/tree.(*Tree).iterateWithCum","github.com/pyroscope-io/pyroscope/pkg/storage/tree.(*Tree).minValue.func1","github.com/pyroscope-io/pyroscope/pkg/structs/cappedarr.(*CappedArray).Push","github.com/pyroscope-io/pyroscope/pkg/util/debug.(*Reporter).Start","runtime.concatstring3","runtime.concatstrings","path/filepath.Join","path/filepath.join","strings.(*Builder).grow","github.com/shirou/gopsutil/cpu.Percent","github.com/shirou/gopsutil/cpu.Times","github.com/shirou/gopsutil/internal/common.HostProc","path/filepath.Clean","github.com/shirou/gopsutil/cpu.TimesWithContext","os.Open","os.OpenFile","syscall.Open","syscall.openat","syscall.Syscall6","os.openFileNolog","os.newFile","syscall.SetNonblock","syscall.fcntl","syscall.Syscall","runtime.entersyscall","runtime.SetFinalizer","runtime.SetFinalizer.func2","runtime.addfinalizer","runtime.spanHasSpecials","github.com/shirou/gopsutil/internal/common.ReadLinesOffsetN","strings.Trim","strings.makeCutsetFunc","runtime.newobject","os.(*File).Close","os.(*file).close","internal/poll.(*pollDesc).evict","internal/poll.runtime_pollUnblock","runtime.netpollunblock","bufio.(*Reader).ReadString","bufio.(*Reader).collectFragments","bufio.(*Reader).ReadSlice","bufio.(*Reader).fill","os.(*File).read","internal/poll.(*FD).Read","internal/poll.ignoringEINTR","syscall.Read","syscall.read","runtime.exitsyscall","runtime.exitsyscallfast","runtime.exitsyscallfast.func1","bufio.NewReaderSize","github.com/shirou/gopsutil/cpu.PercentWithContext","github.com/shirou/gopsutil/internal/common.Sleep","time.NewTimer","github.com/pyroscope-io/pyroscope/pkg/util/metrics.Gauge","runtime.mapaccess2_faststr","memeqbody","github.com/pyroscope-io/pyroscope/pkg/util/debug.DiskUsage","regexp.(*Regexp).ReplaceAllString","regexp.(*Regexp).replaceAll","runtime.roundupsize","regexp.(*Regexp).doExecute","regexp.(*Regexp).backtrack","regexp.(*bitState).reset","runtime.(*pallocBits).find","runtime.(*pallocBits).findSmallN","runtime.findBitRange64","path/filepath.Glob","sort.Strings","sort.Sort","sort.quickSort","sort.insertionSort","sort.StringSlice.Less","runtime.cmpstring","runtime.convTslice","runtime.heapBitsSetType","path/filepath.glob","os.Stat","syscall.Stat","syscall.fstatat","os.(*File).Readdirnames","os.(*File).readdirnames","internal/poll.(*FD).ReadDirent","syscall.ReadDirent","syscall.Getdents","github.com/pyroscope-io/pyroscope/pkg/util/debug.dirSize","path/filepath.Walk","path/filepath.walk","internal/poll.(*FD).Init","internal/poll.(*pollDesc).init","os.Lstat","syscall.Lstat","syscall.BytePtrFromString","syscall.ByteSliceFromString","runtime.makeslicecopy","runtime.(*pageAlloc).allocToCache","strings.(*Builder).WriteString","path/filepath.(*lazybuf).append","runtime.reentersyscall","github.com/pyroscope-io/pyroscope/pkg/util/debug.CPUUsage","runtime.mapassign_faststr","github.com/pyroscope-io/pyroscope/pkg/storage/cache.New.func2","runtime.chanrecv2","github.com/pyroscope-io/pyroscope/pkg/storage/cache.(*Cache).saveToDisk","github.com/pyroscope-io/pyroscope/pkg/util/metrics.Count","runtime.mapaccess1_faststr","github.com/prometheus/client_golang/prometheus.(*counter).Add","github.com/pyroscope-io/pyroscope/pkg/storage.New.func7","github.com/pyroscope-io/pyroscope/pkg/storage/dict.(*Dict).Bytes","github.com/pyroscope-io/pyroscope/pkg/storage/dict.(*Dict).Serialize","sync.(*RWMutex).RUnlock","sync.(*RWMutex).rUnlockSlow","sync.runtime_Semrelease","runtime.semrelease1","runtime.readyWithTime","runtime.typedslicecopy","runtime.bulkBarrierPreWrite","runtime.gcAssistAlloc","runtime.gcAssistAlloc.func1","runtime.gcAssistAlloc1","runtime.gcDrainN","runtime.(*mspan).nextFreeIndex","runtime.(*mspan).refillAllocCache","runtime.bulkBarrierPreWriteSrcOnly","runtime.(*wbBuf).putFast","github.com/pyroscope-io/pyroscope/pkg/util/varint.Write","runtime.nextFreeFast","encoding/binary.PutUvarint","bytes.(*Buffer).Write","bytes.(*Buffer).grow","bytes.makeSlice","github.com/pyroscope-io/pyroscope/pkg/storage.New.func4","github.com/pyroscope-io/pyroscope/pkg/storage/segment.(*Segment).Bytes","github.com/pyroscope-io/pyroscope/pkg/storage/segment.(*Segment).generateMetadata","aeshashbody","github.com/pyroscope-io/pyroscope/pkg/storage/segment.(*Segment).Serialize","runtime.gcmarknewobject","github.com/pyroscope-io/pyroscope/pkg/util/varint.Writer.Write","bytes.(*Buffer).tryGrowByReslice","github.com/pyroscope-io/pyroscope/pkg/util/serialization.WriteMetadata","encoding/json.Marshal","encoding/json.newEncodeState","sync.(*Pool).Get","sync.(*Pool).pin","sync.(*Pool).pinSlow","runtime.profilealloc","runtime.mProf_Malloc","runtime.callers","runtime.callers.func1","encoding/json.(*encodeState).marshal","encoding/json.(*encodeState).reflectValue","encoding/json.valueEncoder","encoding/json.typeEncoder","sync.(*Map).Load","runtime.mapaccess2","encoding/json.mapEncoder.encode","reflect.Value.MapKeys","reflect.maplen","github.com/pyroscope-io/pyroscope/pkg/storage.(*Storage).treeBytes","github.com/pyroscope-io/pyroscope/pkg/storage/tree.(*Tree).Bytes","github.com/pyroscope-io/pyroscope/pkg/storage/tree.(*Tree).Serialize","runtime.asyncPreempt","github.com/pyroscope-io/pyroscope/pkg/structs/cappedarr.New","runtime.(*mspan).init","sort.Search","github.com/pyroscope-io/pyroscope/pkg/storage/dict.(*Dict).Put","runtime.(*mspan).objIndex","github.com/pyroscope-io/pyroscope/pkg/storage/dict.(*trieNode).findNodeAt","runtime.publicationBarrier","runtime.alignUp","runtime.acquirem","github.com/pyroscope-io/pyroscope/pkg/storage/cache.(*Cache).Get","github.com/dgrijalva/lfu-go.(*Cache).Get","github.com/dgrijalva/lfu-go.(*Cache).remEntry","runtime.mapdelete_fast64","github.com/dgraph-io/badger/v2.(*DB).Update","github.com/pyroscope-io/pyroscope/pkg/storage/cache.(*Cache).saveToDisk.func1","runtime.stringtoslicebyte","runtime.rawbyteslice","github.com/dgraph-io/badger/v2.(*Txn).SetEntry","github.com/dgraph-io/badger/v2.(*Txn).modify","github.com/dgraph-io/badger/v2.(*Txn).Commit","github.com/dgraph-io/badger/v2/y.(*WaterMark).Done","runtime.chansend1","runtime.(*guintptr).cas","github.com/dgraph-io/badger/v2.(*Txn).commitAndSend.func3","github.com/dgraph-io/badger/v2.(*request).Wait","sync.(*WaitGroup).Wait","sync.runtime_Semacquire","github.com/dgraph-io/badger/v2.(*request).DecrRef","sync.(*Pool).Put","github.com/dgraph-io/badger/v2.(*Txn).commitAndSend.func2","github.com/dgraph-io/badger/v2.(*Txn).commitAndSend","strconv.FormatUint","strconv.formatBits","runtime.slicebytetostring","runtime.(*gcControllerState).revise","github.com/dgraph-io/badger/v2/y.(*WaterMark).Begin","github.com/dgraph-io/badger/v2.(*oracle).newCommitTs","github.com/dgraph-io/badger/v2.(*oracle).hasConflict","github.com/dgraph-io/badger/v2.(*oracle).cleanupCommittedTransactions","github.com/dgraph-io/badger/v2.(*DB).sendToWriteCh","sync.(*Pool).getSlow","github.com/dgraph-io/badger/v2.glob..func1","github.com/dgraph-io/badger/v2.(*DB).NewTransaction","github.com/dgraph-io/badger/v2.(*DB).newTransaction","runtime.makemap_small","github.com/dgraph-io/badger/v2.(*oracle).readTs","github.com/pyroscope-io/pyroscope/pkg/storage.(*Storage).periodicTask","time.(*Timer).Reset","github.com/pyroscope-io/pyroscope/pkg/storage.(*Storage).writeBackTask","github.com/pyroscope-io/pyroscope/pkg/util/metrics.Timing","github.com/pyroscope-io/pyroscope/pkg/storage.(*Storage).writeBackTask.func1","runtime.GC","runtime.newArenaMayUnlock","runtime.(*pallocBits).free1","runtime.(*mcentral).partialUnswept","runtime.(*mSpanStateBox).get","runtime.mProf_PostSweep","runtime.gcStart","runtime.preemptall","runtime.gcStart.func2","runtime.(*randomOrder).reset","runtime.gcStart.func1","runtime.finishsweep_m","runtime.headTailIndex.split","runtime.(*spanSet).reset","runtime.gcResetMarkState","runtime.gcMarkTinyAllocs","github.com/pyroscope-io/pyroscope/pkg/storage/cache.(*Cache).WriteBack","github.com/dgrijalva/lfu-go.(*Cache).WriteBack","sync.(*Mutex).Unlock","github.com/dgrijalva/lfu-go.(*Cache).persist","runtime.mapiternext","runtime.memhash64","runtime.isEmpty","github.com/pyroscope-io/pyroscope/pkg/storage.(*Storage).evictionTask.func1","runtime.ReadMemStats","runtime.ReadMemStats.func1","runtime.readmemstats_m","runtime.updatememstats","runtime.flushallmcaches","runtime.flushmcache","runtime.stopTheWorld","runtime.stopTheWorld.func1","runtime.startTheWorld","runtime.startTheWorld.func1","github.com/pyroscope-io/pyroscope/pkg/agent/upstream/direct.(*Direct).uploadLoop","github.com/pyroscope-io/pyroscope/pkg/agent/upstream/direct.(*Direct).safeUpload","github.com/pyroscope-io/pyroscope/pkg/agent/upstream/direct.(*Direct).uploadProfile","github.com/pyroscope-io/pyroscope/pkg/structs/transporttrie.(*Trie).Iterate","github.com/pyroscope-io/pyroscope/pkg/agent/upstream/direct.(*Direct).uploadProfile.func1","github.com/pyroscope-io/pyroscope/pkg/storage/tree.(*Tree).Insert","github.com/pyroscope-io/pyroscope/pkg/storage/tree.(*treeNode).insert","github.com/pyroscope-io/pyroscope/pkg/storage.(*parser).nameParserCase","runtime.concatstring2","runtime.rawstringtmp","runtime.rawstring","github.com/pyroscope-io/pyroscope/pkg/storage.(*Storage).Put","github.com/pyroscope-io/pyroscope/pkg/storage/segment.(*Segment).Put","github.com/pyroscope-io/pyroscope/pkg/storage/segment.(*streeNode).put","github.com/pyroscope-io/pyroscope/pkg/storage/segment.(*Segment).Put.func1","github.com/pyroscope-io/pyroscope/pkg/storage.(*Storage).Put.func1","github.com/sirupsen/logrus.WithField","github.com/sirupsen/logrus.(*Logger).WithField","github.com/sirupsen/logrus.(*Logger).newEntry","sync.(*poolChain).popTail","github.com/pyroscope-io/pyroscope/pkg/storage/tree.(*Tree).Merge","github.com/pyroscope-io/pyroscope/pkg/storage/tree.newNode","github.com/pyroscope-io/pyroscope/pkg/storage/tree.(*treeNode).insert.func1","bytes.Compare","cmpbody","github.com/pyroscope-io/pyroscope/pkg/storage/tree.(*Tree).Clone","github.com/pyroscope-io/pyroscope/pkg/storage/tree.(*treeNode).clone","github.com/pyroscope-io/pyroscope/pkg/storage/cache.(*Cache).Put","github.com/dgrijalva/lfu-go.(*Cache).Set","github.com/dgrijalva/lfu-go.(*Cache).increment","runtime.mapassign_fast64ptr","github.com/pyroscope-io/pyroscope/pkg/storage/labels.(*Labels).Put","github.com/pyroscope-io/pyroscope/pkg/storage.(*Storage).performFreeSpaceCheck","github.com/pyroscope-io/pyroscope/pkg/util/disk.FreeSpace","syscall.Statfs","github.com/pyroscope-io/pyroscope/pkg/agent.(*ProfileSession).takeSnapshots","github.com/pyroscope-io/pyroscope/pkg/agent/gospy.(*GoSpy).Snapshot","github.com/pyroscope-io/pyroscope/pkg/convert.(*Profile).Get","strings.Join","strings.(*Builder).copyCheck","strings.(*Builder).Grow","runtime.mapaccess1_fast64","github.com/pyroscope-io/pyroscope/pkg/agent/gospy.(*GoSpy).Snapshot.func3","github.com/pyroscope-io/pyroscope/pkg/agent.(*ProfileSession).takeSnapshots.func1","github.com/pyroscope-io/pyroscope/pkg/structs/transporttrie.(*Trie).Insert","github.com/pyroscope-io/pyroscope/pkg/structs/transporttrie.newTrieNode","github.com/pyroscope-io/pyroscope/pkg/structs/transporttrie.(*trieNode).findNodeAt","runtime.heapBits.initSpan","runtime.(*fixalloc).alloc","github.com/pyroscope-io/pyroscope/pkg/structs/transporttrie.(*trieNode).insert","github.com/pyroscope-io/pyroscope/pkg/agent/gospy.getHeapProfile","github.com/pyroscope-io/pyroscope/pkg/convert.ParsePprof","google.golang.org/protobuf/proto.Unmarshal","google.golang.org/protobuf/proto.UnmarshalOptions.unmarshal","google.golang.org/protobuf/internal/impl.(*MessageInfo).unmarshal","google.golang.org/protobuf/internal/impl.(*MessageInfo).unmarshalPointer","google.golang.org/protobuf/internal/impl.consumeMessageSliceInfo","google.golang.org/protobuf/internal/impl.pointer.AppendPointerSlice","github.com/pyroscope-io/pyroscope/pkg/agent.(*ProfileSession).reset","github.com/pyroscope-io/pyroscope/pkg/agent.(*ProfileSession).uploadTries","github.com/pyroscope-io/pyroscope/pkg/structs/transporttrie.(*Trie).Diff","github.com/pyroscope-io/pyroscope/pkg/structs/transporttrie.(*Trie).Diff.func1","runtime.deductSweepCredit","github.com/pyroscope-io/pyroscope/pkg/structs/transporttrie.(*trieNode).clone","bytes.Equal","github.com/pyroscope-io/pyroscope/pkg/agent/upstream/direct.(*Direct).Upload","runtime.selectgo","github.com/dgraph-io/badger/v2/y.(*WaterMark).process","github.com/dgraph-io/badger/v2/y.(*WaterMark).process.func1","runtime.mapaccess2_fast64","runtime.convT64","container/heap.Pop","github.com/dgraph-io/badger/v2/y.(*uint64Heap).Pop","github.com/dgraph-io/badger/v2/y.(*Closer).HasBeenClosed","github.com/dgraph-io/badger/v2.(*levelsController).runCompactor","runtime.selunlock","runtime.sellock","runtime.releaseSudog","runtime.puintptr.ptr","runtime.acquireSudog","runtime.(*waitq).enqueue","github.com/dgraph-io/badger/v2.(*levelsController).pickCompactLevels","sort.Slice","sort.quickSort_func","sort.maxDepth","internal/reflectlite.escapes","internal/reflectlite.ValueOf","internal/reflectlite.Swapper","internal/reflectlite.flag.kind","internal/reflectlite.Value.Len","internal/reflectlite.(*rtype).Kind","github.com/dgraph-io/badger/v2.(*compactStatus).overlapsWith","github.com/dgraph-io/badger/v2.(*levelCompactStatus).overlapsWith","github.com/dgraph-io/badger/v2.(*compactStatus).delSize","github.com/dgraph-io/badger/v2.(*levelsController).isLevel0Compactable","sync.(*RWMutex).RLock","github.com/dgraph-io/badger/v2.(*levelHandler).numTables","github.com/dgraph-io/badger/v2.(*levelHandler).isCompactable","github.com/dgraph-io/badger/v2.(*levelHandler).getTotalSize","github.com/dgraph-io/badger/v2.(*DB).updateSize","github.com/dgraph-io/badger/v2.(*DB).calculateSize","github.com/dgraph-io/badger/v2.(*DB).calculateSize.func2","expvar.(*Map).Set","sync.(*Map).Store","sync.(*entry).tryStore","sync/atomic.CompareAndSwapPointer","runtime/internal/atomic.Cas64","github.com/dgraph-io/badger/v2.(*DB).doWrites.func1","github.com/dgraph-io/badger/v2.(*Options).Debugf","github.com/dgraph-io/badger/v2.(*DB).writeRequests","sync.(*WaitGroup).Done","sync.(*WaitGroup).Add","sync.(*RWMutex).Lock","github.com/dgraph-io/badger/v2.(*valueLog).write","github.com/dgraph-io/badger/v2.(*valueLog).write.func2","github.com/dgraph-io/badger/v2.(*valueLog).write.func1","os.(*File).write","internal/poll.(*pollDesc).prepareWrite","internal/poll.(*pollDesc).prepare","internal/poll.(*FD).Write","syscall.Write","syscall.write","github.com/dgraph-io/badger/v2.(*logFile).encodeEntry","runtime.adjustframe","runtime.adjustpointers","hash/crc32.New","runtime.funcMaxSPDelta","runtime.funcdata","hash/crc32.(*digest).Write","hash/crc32.archUpdateCastagnoli","github.com/dgraph-io/badger/v2.(*publisher).sendUpdates","github.com/dgraph-io/badger/v2.(*publisher).noOfSubscribers","github.com/dgraph-io/badger/v2.(*DB).writeToLSM","github.com/dgraph-io/badger/v2/skl.(*Skiplist).Put","github.com/dgraph-io/badger/v2/skl.newNode","github.com/dgraph-io/badger/v2/skl.(*Arena).putVal","github.com/dgraph-io/badger/v2/skl.(*Arena).putNode","runtime.convT32","github.com/dgraph-io/badger/v2/skl.(*node).key","github.com/dgraph-io/badger/v2/skl.(*Skiplist).findSpliceForLevel","github.com/dgraph-io/badger/v2.(*DB).doWrites","runtime.newproc","runtime.newproc.func1","runtime.newproc1","runtime.hasPrefix","runtime.gfget","runtime.gfget.func1","runtime.gclinkptr.ptr"],"levels":[[0,15299,0,0],[0,12,1,655,0,55,0,622,0,2,0,614,0,99,9,589,0,3,3,588,0,26,0,582,0,281,0,550,0,31,0,515,0,605,0,476,0,330,0,369,0,95,1,271,0,3,0,258,0,9,0,256,0,488,11,238,0,11376,6,126,0,1832,0,53,0,7,0,43,0,42,0,22,0,1,1,21,0,2,0,1],[1,7,0,10,0,2,0,656,0,2,0,581,0,54,2,624,0,1,1,623,0,2,0,615,9,5,0,612,0,6,2,609,0,43,3,596,0,1,1,595,0,1,1,110,0,34,12,581,3,22,0,583,0,4,1,581,0,27,0,573,0,254,0,551,0,31,0,516,0,10,0,504,0,594,0,478,0,1,0,477,0,329,2,371,0,1,1,370,1,1,0,367,0,55,0,325,0,1,0,322,0,34,0,277,0,1,0,274,0,2,0,272,0,3,0,259,0,1,1,257,0,5,5,53,0,3,3,17,11,1,0,254,0,476,178,239,6,60,0,213,0,2,1,210,0,1,0,208,0,11307,0,17,0,484,2,119,0,1348,0,54,0,7,0,44,0,42,0,23,1,1,0,8,0,1,0,2],[1,7,0,11,0,2,0,17,0,2,0,39,2,6,0,647,0,1,0,645,0,42,0,628,0,1,0,300,0,1,1,627,0,1,0,625,1,1,0,617,0,1,0,616,9,4,2,613,0,1,1,610,2,2,2,611,0,2,2,610,3,3,2,608,0,8,4,606,0,29,3,597,14,1,1,106,0,4,4,594,0,3,3,210,0,2,0,39,0,1,1,593,0,5,5,592,0,2,2,591,0,1,1,590,0,3,0,26,3,2,1,586,0,18,0,585,0,1,1,584,0,1,1,442,1,1,1,212,0,1,1,210,0,1,0,26,0,27,0,574,0,1,0,565,0,253,29,552,0,31,0,517,0,10,0,505,0,594,0,479,0,1,1,116,2,4,0,472,0,23,0,443,0,108,0,426,0,136,1,399,0,53,0,375,0,3,0,372,2,1,1,368,0,38,0,353,0,13,0,335,0,4,0,326,0,1,0,323,0,1,0,319,0,33,0,278,0,1,0,275,0,2,1,273,0,3,0,260,20,1,0,17,178,104,15,250,0,188,44,75,0,1,1,223,0,5,5,227,6,1,1,237,0,49,0,220,0,1,0,39,0,1,1,44,0,8,0,17,1,1,0,44,0,1,1,209,0,11305,1,127,0,1,0,39,0,1,0,26,2,8,8,125,0,1,1,124,0,310,11,47,0,128,1,39,0,1,1,120,0,34,0,26,0,2,2,105,0,1,1,118,0,1,0,116,0,1343,5,48,0,1,1,55,0,7,0,45,0,2,2,42,0,3,0,39,0,1,1,21,0,1,1,38,0,35,0,24,1,1,0,9,0,1,0,3],[1,6,0,385,0,1,1,343,0,2,0,657,0,2,2,40,2,6,0,648,0,1,1,646,0,30,0,637,0,9,0,629,0,3,1,264,0,1,0,11,1,1,0,626,1,1,0,618,0,1,0,354,11,1,1,429,0,1,1,378,12,1,1,378,4,3,3,607,0,1,1,378,3,1,1,605,0,6,1,602,0,5,5,601,0,5,5,600,0,4,4,599,0,5,4,598,22,2,2,40,9,3,3,27,4,1,0,587,0,17,1,11,0,1,1,394,5,1,1,27,0,1,0,580,0,26,3,575,0,1,0,566,29,96,0,557,0,44,1,264,0,33,22,556,0,18,0,300,0,5,0,445,0,2,0,383,0,3,3,555,0,11,6,364,0,1,1,554,0,9,1,276,0,2,2,553,0,19,0,526,0,2,0,522,0,10,4,518,0,2,0,513,0,1,0,511,0,7,0,17,0,594,1,480,3,4,0,473,0,19,0,449,0,3,0,447,0,1,0,444,0,2,0,439,0,106,0,427,1,135,0,400,0,53,0,376,0,1,1,374,0,1,1,373,0,1,1,323,3,38,0,354,0,6,0,348,0,1,0,282,0,4,0,344,0,2,0,336,0,4,1,327,0,1,1,324,0,1,0,320,0,31,0,281,0,2,0,279,0,1,0,276,1,1,1,174,0,3,0,261,20,1,0,255,193,5,5,253,0,70,70,252,0,14,14,251,44,55,55,249,0,14,0,77,0,4,4,244,0,66,48,76,0,1,1,241,0,2,0,39,0,1,1,240,0,1,0,26,13,29,0,232,0,19,0,17,0,1,0,26,0,1,1,40,1,5,0,216,0,1,0,215,0,1,1,63,0,1,0,214,1,1,0,45,2,104,104,201,0,11200,1360,128,0,1,0,40,0,1,1,27,22,2,2,105,0,1,0,39,0,296,14,48,1,127,79,40,1,34,34,27,3,1,1,117,5,1,0,115,0,2,2,52,0,6,6,114,0,10,10,113,0,32,32,51,0,6,6,112,0,2,2,93,0,1,1,111,0,3,3,110,0,1111,201,50,0,2,2,65,0,18,0,39,0,13,8,21,0,3,3,38,0,7,7,63,0,59,1,58,0,1,1,57,0,54,54,56,0,7,0,26,1,6,0,47,0,1,0,39,2,3,2,40,2,5,0,37,0,7,4,32,0,5,0,29,0,3,3,28,0,1,0,26,0,14,14,25,1,1,0,10,0,1,0,4],[1,6,0,17,1,2,0,658,4,1,0,654,0,2,2,653,0,3,0,649,1,7,0,396,0,3,1,643,0,10,0,640,0,10,0,300,0,9,0,630,1,2,0,11,0,1,0,385,1,1,0,380,1,1,0,619,0,1,0,355,39,3,3,604,0,1,1,603,0,1,1,429,18,1,1,429,40,1,0,585,1,1,0,12,0,15,1,385,7,1,0,581,3,1,0,579,0,6,0,578,0,16,2,561,0,1,0,567,29,96,1,558,1,1,1,438,0,1,1,223,0,1,1,42,0,35,10,11,0,1,1,174,0,3,3,394,0,1,1,118,22,11,11,502,0,1,1,438,0,16,8,11,0,1,1,394,0,5,0,446,0,2,2,174,9,5,5,174,2,8,1,10,2,1,0,547,0,2,0,546,0,16,0,527,0,1,0,523,0,1,0,300,4,1,0,519,0,4,0,264,0,1,1,174,0,2,0,17,0,1,0,17,0,7,0,506,1,86,0,497,0,1,0,372,0,506,15,481,3,1,1,475,0,1,0,465,0,1,0,474,0,1,0,300,0,12,0,460,0,1,0,459,0,5,1,453,0,1,0,450,0,3,1,448,0,1,0,445,0,2,0,440,0,105,1,428,0,1,0,300,1,133,20,403,0,1,0,401,0,1,0,300,0,51,6,377,0,2,1,300,6,7,0,358,0,4,0,274,0,27,0,355,0,6,0,349,0,1,0,283,0,3,0,345,0,1,0,264,0,1,0,342,0,1,0,337,1,2,0,329,0,1,1,328,1,1,1,321,0,1,0,318,0,23,0,297,0,7,0,282,0,2,0,274,0,1,0,10,2,3,0,261,20,1,0,222,381,14,0,17,52,17,17,243,0,1,1,242,1,2,2,40,1,1,0,27,13,6,6,236,0,23,7,233,0,2,0,228,0,5,0,224,0,12,0,221,0,1,1,27,2,4,2,217,0,1,0,39,0,1,1,131,1,1,0,37,1,1,0,47,1466,373,8,205,0,65,5,202,0,6,6,201,0,3,3,157,0,55,55,152,0,4,4,200,0,52,52,199,0,47,47,198,0,227,222,197,0,238,27,155,0,2,2,154,0,8673,3118,137,0,86,86,136,0,9,2,129,0,1,1,46,25,1,0,40,14,5,5,93,0,28,16,111,0,96,24,50,0,89,0,39,0,37,36,21,0,2,0,85,0,1,1,57,0,2,2,56,0,22,0,26,80,48,48,41,44,1,1,105,263,5,1,68,0,149,117,93,0,5,0,49,0,14,0,39,0,9,1,91,0,16,13,21,0,114,18,88,0,10,7,87,0,1,1,86,0,1,0,85,0,30,30,60,0,12,12,57,0,322,41,83,0,217,10,66,0,5,0,26,2,18,12,40,8,5,5,64,11,58,0,59,55,7,5,27,1,6,0,48,0,1,0,40,4,1,1,41,2,5,1,5,4,3,0,33,0,5,0,30,3,1,1,27,15,1,0,11,0,1,0,5],[1,6,0,386,1,1,0,660,0,1,0,659,4,1,0,538,2,2,0,651,0,1,1,650,1,7,0,397,1,2,2,644,0,10,0,300,0,1,1,42,0,9,0,11,0,8,0,631,0,1,0,300,1,2,0,385,0,1,0,17,1,1,0,381,1,1,0,620,0,1,0,358,103,1,1,11,1,1,0,13,1,14,0,17,7,1,0,100,3,1,1,324,0,6,0,578,2,11,0,576,0,1,1,11,0,2,2,174,0,1,0,568,30,93,0,559,0,2,2,499,14,3,0,12,0,4,4,197,0,13,13,343,0,5,5,265,47,1,0,12,0,4,4,343,0,3,3,265,1,4,1,11,0,1,1,265,19,5,0,11,0,1,1,394,0,1,1,118,2,1,0,548,0,2,0,472,0,16,0,528,0,1,0,273,0,1,0,11,4,1,0,520,0,3,0,11,0,1,1,265,1,2,0,514,0,1,0,512,0,7,0,507,1,86,0,498,0,1,1,374,15,1,1,236,0,15,0,487,0,1,1,42,0,16,2,486,0,458,181,239,4,1,0,451,0,1,0,300,0,1,0,11,0,5,0,469,0,2,0,466,0,2,0,465,0,1,0,10,0,1,0,300,0,1,0,461,0,1,0,212,1,4,1,454,0,1,0,451,1,2,1,300,0,1,0,446,0,1,0,441,0,1,0,323,1,1,0,396,0,63,0,433,0,19,0,267,0,5,0,430,0,12,0,393,0,4,0,264,0,1,0,11,21,4,0,407,0,22,7,405,0,1,0,212,0,70,5,264,0,16,1,383,0,1,0,368,0,1,0,11,6,1,0,396,0,15,0,393,0,25,1,264,0,3,0,383,0,1,0,378,1,1,0,11,6,7,0,359,0,4,0,275,0,7,0,348,0,13,0,358,0,7,0,282,0,6,0,350,0,1,0,284,0,3,0,346,0,1,1,11,0,1,0,11,0,1,0,338,1,2,1,330,3,1,0,10,0,20,0,306,0,1,0,301,0,1,0,276,0,1,0,298,0,7,0,283,0,2,0,275,0,1,0,11,2,3,0,262,20,1,0,79,381,7,0,78,0,7,0,39,74,1,0,31,26,15,15,235,0,1,1,234,0,2,0,229,0,5,0,225,0,12,0,217,5,2,0,218,0,1,1,40,2,1,0,5,1,1,0,48,1474,3,2,207,0,4,0,147,0,357,1,206,0,1,0,145,5,2,0,180,0,7,0,175,0,51,0,203,389,5,5,152,27,163,1,160,0,39,0,158,0,9,7,156,3120,68,65,150,0,26,26,149,0,120,120,143,0,5,5,153,0,1,1,142,0,124,124,152,0,1396,1393,132,0,803,794,141,0,1500,1500,135,0,6,6,140,0,1209,1209,134,0,3,3,139,0,293,293,138,0,1,1,136,88,7,0,130,26,1,1,41,35,12,12,105,24,19,19,123,0,1,0,68,0,6,6,93,0,6,6,122,0,27,26,21,0,3,0,88,0,4,4,57,0,5,0,83,0,1,0,66,0,89,20,40,36,1,1,64,0,1,0,121,0,1,0,30,3,22,22,27,437,4,4,70,117,32,6,94,0,4,0,30,0,1,0,66,0,14,4,40,1,8,8,92,13,3,3,64,18,93,93,90,0,3,3,89,7,3,3,60,1,1,0,30,83,281,280,84,10,31,3,68,0,176,25,67,0,5,2,27,14,2,0,6,0,1,1,46,0,3,3,41,24,1,1,62,0,3,0,39,0,2,2,61,0,52,0,29,60,2,0,31,1,1,1,52,0,1,1,51,0,1,1,50,0,1,0,49,0,1,0,39,0,1,0,26,0,1,1,46,8,4,0,6,4,3,0,34,0,5,0,31,19,1,0,12,0,1,0,6],[1,6,0,387,1,1,0,661,0,1,1,324,4,1,1,539,2,2,0,652,2,5,0,398,0,2,0,10,3,10,0,11,1,4,0,12,0,5,0,385,0,7,0,634,0,1,0,632,0,1,0,11,1,2,0,17,0,1,0,386,1,1,0,382,1,1,1,621,0,1,0,359,105,1,0,14,1,14,0,386,7,1,0,101,4,6,0,578,2,7,0,264,0,4,0,300,3,1,0,569,30,81,66,561,0,12,0,560,16,3,0,13,69,1,0,13,9,2,0,12,0,1,0,413,20,4,1,12,0,1,0,413,4,1,0,549,0,2,0,473,0,15,0,529,0,1,0,264,0,1,0,524,0,1,0,12,4,1,0,521,0,2,0,12,0,1,1,343,2,2,0,225,0,1,1,63,0,7,1,508,1,85,60,500,0,1,1,499,17,1,0,496,0,14,0,17,3,14,14,235,181,1,1,485,0,2,2,484,0,104,7,250,0,158,35,75,0,4,4,223,0,8,8,227,4,1,0,99,0,1,0,11,0,1,0,12,0,2,0,451,0,3,1,410,0,1,1,468,0,1,1,467,0,2,0,451,0,1,0,11,0,1,1,11,0,1,0,462,0,1,0,129,2,1,0,457,0,2,0,455,0,1,0,99,2,1,0,11,0,1,0,11,0,1,1,442,0,1,1,324,1,1,0,397,0,59,10,435,0,4,0,300,0,19,4,268,0,5,0,10,0,3,1,396,0,1,1,429,0,8,4,10,0,3,0,11,0,1,1,394,0,1,0,385,21,4,0,408,7,11,5,396,0,1,1,406,0,3,3,395,0,1,0,129,5,1,1,392,0,61,5,11,0,3,3,394,1,1,1,392,0,8,0,384,0,1,1,197,0,5,5,174,0,1,1,402,0,1,0,12,6,1,0,397,0,3,1,396,0,1,1,395,0,11,0,10,1,2,2,392,0,1,0,391,0,14,2,11,0,6,6,174,0,1,1,118,0,2,0,384,0,1,1,174,0,1,0,379,1,1,1,265,6,1,0,360,0,6,0,347,0,1,1,365,0,1,1,280,0,1,0,364,0,1,0,276,0,7,0,349,0,13,0,359,0,7,0,283,0,6,0,312,0,1,0,285,0,3,0,347,1,1,1,343,0,1,0,339,2,1,0,331,3,1,0,11,0,20,0,307,0,1,0,302,0,1,0,10,0,1,0,299,0,3,0,287,0,4,0,284,0,1,1,280,0,1,0,276,0,1,0,12,2,3,0,263,20,1,0,80,381,1,1,248,0,5,0,79,0,1,1,134,0,7,1,40,74,1,1,7,42,2,0,230,0,1,0,88,0,1,0,30,0,3,0,226,0,12,0,121,5,1,1,219,0,1,1,131,3,1,0,6,1,1,0,111,1476,1,1,33,0,4,4,148,1,283,15,147,0,1,1,174,0,72,1,145,0,1,1,176,5,2,0,147,0,6,6,176,0,1,1,204,0,49,49,148,0,2,2,146,422,4,0,195,0,1,1,194,0,153,3,163,0,4,1,161,0,39,20,159,7,1,1,157,0,1,1,137,3185,3,3,149,1669,3,3,151,794,2,2,150,0,2,2,149,0,2,0,144,0,1,1,143,0,1,1,142,0,1,1,134,3100,2,2,135,0,1,1,134,0,4,2,131,117,1,1,70,38,1,1,64,0,3,3,90,4,5,5,84,0,1,0,67,20,69,69,41,37,1,1,70,0,1,0,31,589,1,0,39,0,25,1,95,0,4,1,31,0,1,1,67,4,1,1,46,0,9,9,41,150,1,0,31,363,1,1,25,13,21,16,70,0,7,7,69,25,151,11,6,2,3,0,31,14,2,2,7,29,3,0,40,2,51,2,30,0,1,1,60,60,2,2,7,4,1,0,30,0,1,0,40,0,1,1,27,9,4,4,7,4,1,1,36,0,2,2,35,0,5,5,7,19,1,0,13,0,1,1,7],[1,6,0,388,1,1,1,662,8,2,0,11,2,5,0,10,0,2,0,11,3,1,0,12,0,1,0,385,0,8,0,343,1,4,0,13,0,5,0,17,0,7,1,312,0,1,1,633,0,1,0,385,1,2,0,386,0,1,0,387,1,1,0,101,2,1,0,347,105,1,1,252,1,14,0,387,7,1,0,17,4,6,0,578,2,7,2,11,0,4,1,11,3,1,0,570,96,4,0,564,0,5,0,11,0,2,2,174,0,1,0,300,0,2,2,394,0,1,1,118,0,2,2,10,0,10,0,300,16,3,2,14,69,1,1,14,9,2,0,13,0,1,0,414,21,3,0,13,0,1,0,414,4,1,1,291,0,2,0,465,0,15,0,530,0,1,1,174,0,1,0,525,0,1,0,13,4,1,1,264,0,2,0,13,3,1,0,88,0,1,0,59,2,1,0,230,0,5,0,509,61,1,1,429,0,1,1,503,0,21,20,501,0,2,1,98,18,1,1,132,0,1,1,495,0,7,0,491,0,2,0,489,0,2,2,63,0,2,0,214,208,8,8,253,0,80,80,252,0,9,9,251,35,34,34,249,0,10,0,77,0,8,8,244,0,60,42,76,0,3,3,223,0,2,2,241,0,2,0,39,0,4,3,240,16,1,0,100,0,1,1,134,0,1,0,13,0,2,0,99,1,1,0,471,0,1,1,470,2,2,0,99,0,1,0,385,1,1,0,463,0,1,0,17,2,1,0,458,0,2,0,456,0,1,0,100,2,1,0,12,0,1,0,12,3,1,0,398,10,46,3,393,0,2,2,429,0,1,1,11,0,4,1,11,4,6,0,269,0,9,0,264,0,5,0,11,1,1,0,397,0,1,1,174,5,3,1,11,0,1,1,394,0,2,0,385,0,1,1,404,1,1,0,17,21,3,0,417,0,1,0,409,12,4,0,397,0,2,2,174,4,1,0,17,11,9,0,12,0,1,1,152,0,30,1,385,0,4,4,404,0,1,1,197,0,9,9,343,0,2,2,265,5,8,0,129,7,1,0,13,6,1,0,398,1,2,2,174,1,9,1,11,0,1,1,394,0,1,1,118,3,1,0,129,2,5,1,12,0,3,0,385,0,4,4,343,7,2,0,129,1,1,0,380,8,1,0,361,0,6,5,286,2,1,1,174,0,1,0,10,0,7,0,10,0,1,0,360,0,12,0,347,0,2,0,287,0,5,0,284,0,6,0,351,0,1,1,286,0,3,3,286,2,1,0,340,2,1,0,10,3,1,0,12,0,20,0,308,0,1,0,303,0,1,1,11,0,1,1,300,0,3,0,288,0,4,0,285,1,1,0,10,0,1,0,13,2,1,0,267,0,2,0,264,20,1,0,81,382,4,0,80,0,1,1,245,2,6,6,41,117,2,2,231,0,1,1,90,0,1,0,31,0,3,0,70,0,12,0,70,10,1,1,7,1,1,0,211,1497,258,258,148,0,2,2,204,0,5,0,187,0,3,0,175,2,71,71,176,6,2,2,148,480,4,0,196,4,1,1,193,0,2,0,192,0,130,14,177,0,2,0,175,0,4,1,159,0,10,2,165,0,1,1,164,1,3,3,162,20,3,3,152,0,5,5,132,0,2,2,141,0,2,2,135,0,2,2,134,0,5,5,138,5667,1,0,147,0,1,0,145,3108,1,1,133,0,1,1,132,169,1,0,6,127,1,1,7,589,1,1,40,1,1,0,109,0,1,1,108,0,1,1,107,0,21,1,96,1,3,3,7,165,1,1,7,393,4,0,73,0,1,0,71,43,140,140,7,2,3,3,7,45,3,3,41,4,49,1,31,67,1,0,31,0,1,1,41,45,1,0,14],[1,6,2,137,10,2,0,385,2,5,0,11,0,2,0,12,3,1,0,13,0,1,0,17,0,8,0,44,1,2,0,14,0,2,0,74,0,5,0,386,1,6,0,635,1,1,0,17,1,2,0,387,0,1,0,388,1,1,0,17,2,1,1,286,107,14,0,388,7,1,0,102,4,6,0,578,4,1,1,197,0,4,4,343,1,3,0,12,3,1,0,571,96,3,0,300,0,1,0,432,0,5,0,12,2,1,1,11,5,7,3,11,0,3,3,394,18,1,0,15,79,2,1,14,0,1,0,415,21,3,0,14,0,1,0,415,5,2,0,451,0,1,0,542,0,1,0,540,0,12,2,535,0,1,0,531,1,1,1,11,0,1,0,14,5,1,0,14,0,1,0,74,3,1,1,90,0,1,0,29,2,1,1,231,0,5,0,510,83,1,1,502,1,1,0,99,20,7,0,492,0,2,0,225,2,1,0,37,0,1,0,488,374,10,0,17,50,17,17,243,0,1,1,242,5,2,0,40,3,1,0,482,16,1,0,101,1,1,0,14,0,2,0,100,1,1,0,300,3,2,2,106,0,1,0,17,1,1,0,11,0,1,0,130,2,1,0,411,0,1,0,39,0,1,1,209,0,1,0,101,2,1,0,13,0,1,0,13,3,1,0,10,13,17,4,396,0,1,1,395,0,25,1,10,4,1,1,434,0,1,0,385,0,1,1,197,4,6,0,270,0,7,0,11,0,2,2,174,0,4,0,12,0,1,0,413,1,1,0,10,7,1,0,385,0,1,1,404,1,2,0,17,2,1,0,386,21,3,0,418,0,1,0,410,12,2,0,398,0,2,0,10,6,1,0,130,11,8,1,13,0,1,0,389,2,29,0,17,21,8,0,17,7,1,1,14,6,1,0,10,5,7,0,385,0,1,1,134,5,1,0,17,3,3,0,13,0,1,0,389,0,3,0,17,11,2,0,17,1,1,0,381,8,1,0,362,5,1,0,292,3,1,1,11,0,7,1,11,0,1,0,361,0,12,12,286,0,2,0,288,0,5,0,285,0,6,0,352,6,1,1,341,2,1,0,11,3,1,0,13,0,20,0,309,0,1,0,304,2,2,0,293,0,1,0,289,0,4,4,286,1,1,0,11,0,1,1,14,2,1,0,268,0,1,0,11,0,1,1,265,20,1,1,247,382,3,0,81,0,1,1,246,129,1,1,7,0,2,0,73,0,1,0,39,0,9,3,73,0,3,2,71,12,1,1,212,1757,5,0,171,0,3,3,176,561,4,3,196,5,2,0,175,14,6,6,166,0,19,0,190,0,91,0,178,0,2,2,176,1,1,1,141,0,2,2,134,2,3,0,167,0,5,5,166,5711,1,1,148,0,1,1,146,3279,1,1,7,719,1,1,101,3,18,1,98,0,2,1,97,563,4,1,74,0,1,1,72,241,48,48,7,67,1,1,7,46,1,0,15],[3,1,1,132,0,2,2,134,0,1,1,138,10,2,0,17,2,4,0,12,0,1,0,385,0,2,0,44,3,1,0,14,0,1,0,386,0,7,0,167,0,1,1,641,1,2,0,44,0,1,1,76,0,1,0,44,0,5,0,387,1,6,0,636,1,1,0,386,1,2,1,388,0,1,1,137,1,1,0,102,110,2,0,205,0,2,2,197,0,1,0,155,0,9,4,137,7,1,0,103,4,5,0,578,0,1,0,300,10,3,0,13,3,1,0,570,96,2,0,11,0,1,1,118,0,1,0,538,0,5,0,13,11,2,0,12,0,1,1,343,0,1,1,265,21,1,0,16,80,1,0,15,0,1,0,17,21,3,0,15,0,1,0,17,5,1,0,99,0,1,0,39,0,1,0,543,0,1,0,541,2,4,0,521,0,1,0,536,0,5,0,264,0,1,0,532,2,1,0,15,5,1,0,15,0,1,1,76,4,1,0,30,3,3,2,73,0,1,0,39,0,1,0,71,85,1,1,106,20,6,6,494,0,1,1,493,0,2,1,226,2,1,1,5,0,1,0,33,374,8,0,78,0,2,0,39,73,2,2,41,3,1,1,265,16,1,0,17,1,1,1,390,0,1,0,211,0,1,0,101,1,1,0,11,5,1,0,386,1,1,0,12,0,1,0,131,2,1,0,412,0,1,1,40,1,1,0,17,2,1,0,14,0,1,0,74,3,1,0,11,17,8,1,397,0,5,5,174,2,1,1,438,0,1,1,437,0,19,4,11,0,3,3,394,5,1,0,17,5,6,4,432,0,1,0,12,0,4,0,385,0,1,1,343,0,1,1,265,2,4,0,13,0,1,0,414,1,1,0,11,7,1,0,17,2,2,0,386,2,1,0,387,21,2,0,423,0,1,0,419,0,1,0,411,12,2,0,10,0,2,0,11,6,1,0,131,12,6,2,14,0,1,0,74,0,1,1,390,2,29,0,386,21,8,0,130,14,1,0,11,5,7,0,17,6,1,0,130,3,3,1,14,0,1,1,390,0,3,0,386,11,2,0,130,1,1,0,382,8,1,1,174,5,1,0,366,5,6,0,12,0,1,0,362,12,1,0,356,0,1,0,300,0,5,5,286,0,6,6,291,9,1,0,12,3,1,1,227,0,20,0,310,0,1,1,305,2,1,1,132,0,1,0,17,0,1,0,290,5,1,0,12,3,1,0,269,0,1,0,12,404,1,1,247,0,2,2,82,131,2,1,74,0,1,1,40,3,6,3,74,2,1,0,72,1770,4,0,39,0,1,0,26,567,1,1,196,5,2,2,176,20,1,1,110,0,18,7,184,0,91,2,179,8,1,1,174,0,1,0,169,0,1,1,168,9722,17,5,99,1,1,0,21,564,3,0,75,404,1,0,16],[17,2,0,386,2,4,0,13,0,1,0,17,0,1,0,167,0,1,0,641,3,1,1,464,0,1,0,387,0,5,1,177,0,1,1,174,0,1,1,168,2,2,0,167,1,1,0,167,0,5,0,388,1,6,6,291,1,1,0,387,2,1,0,205,2,1,0,103,110,1,0,207,0,1,0,206,2,1,0,160,4,1,1,150,0,3,3,132,0,1,1,135,7,1,0,59,4,5,0,578,0,1,1,11,10,2,1,14,0,1,0,74,3,1,0,572,96,2,0,12,1,1,1,539,0,5,0,14,11,1,0,13,0,1,1,389,23,1,1,265,80,1,0,16,0,1,0,416,21,3,0,16,0,1,0,416,5,1,0,100,0,1,1,40,0,1,0,544,0,1,0,541,2,4,0,432,0,1,0,300,0,5,0,11,0,1,0,533,2,1,0,16,5,1,0,16,5,1,0,31,5,1,0,74,0,1,1,40,0,1,1,72,114,1,1,490,3,1,1,34,374,8,0,79,0,2,0,40,95,1,0,102,2,1,0,212,0,1,0,17,1,1,1,197,5,1,0,387,1,1,0,13,0,1,1,132,2,1,0,10,2,1,0,102,2,1,1,252,0,1,0,76,3,1,0,12,18,7,1,10,13,1,1,12,0,13,0,385,0,1,1,436,8,1,0,386,9,2,2,429,0,1,0,13,0,4,0,17,4,4,0,14,0,1,0,415,1,1,0,12,7,1,0,386,2,2,0,387,2,1,0,388,21,1,0,424,0,1,1,10,0,1,0,420,0,1,0,412,12,2,1,11,0,2,0,12,6,1,1,132,14,2,2,390,0,2,2,252,0,1,1,76,3,29,1,387,21,4,4,135,0,4,0,131,14,1,0,12,5,7,0,386,6,1,1,131,4,2,0,15,1,3,0,387,11,2,0,131,1,1,0,101,14,1,1,105,5,6,0,13,0,1,0,11,12,1,0,357,0,1,0,11,20,1,0,13,4,20,0,311,4,1,0,294,0,1,0,291,5,1,0,13,3,1,0,270,0,1,0,13,539,1,1,227,7,2,0,75,0,1,1,223,2,1,0,222,1770,4,2,40,0,1,0,27,603,11,7,185,2,18,2,186,0,25,10,182,0,46,7,159,9,1,0,170,9728,4,4,106,0,8,0,100,1,1,1,64,564,1,0,77,0,2,2,76,404,1,0,17],[17,2,0,387,2,4,1,14,0,1,0,386,0,1,0,177,0,1,1,185,4,1,0,388,1,3,1,638,0,1,1,166,4,2,0,177,1,1,0,177,0,5,2,137,8,1,0,388,2,1,0,207,2,1,1,452,110,1,0,33,0,1,0,147,2,1,0,163,16,1,0,29,4,5,0,578,12,1,1,577,0,1,1,76,3,1,0,264,96,2,0,13,2,5,0,15,11,1,1,14,105,1,1,265,0,1,1,177,21,2,2,265,0,1,0,17,0,1,0,177,5,1,0,101,1,1,1,545,0,1,0,541,2,2,0,538,0,2,2,537,0,1,1,394,0,4,4,343,0,1,1,265,0,1,0,410,2,1,0,17,5,1,1,265,5,1,1,7,5,1,1,76,495,6,0,80,0,2,2,483,0,2,2,41,95,1,0,103,2,1,0,129,0,1,0,102,7,1,0,388,1,1,0,14,3,1,0,11,2,1,0,103,3,1,1,243,3,1,0,13,19,5,0,11,0,1,1,118,14,13,0,17,9,1,0,387,11,1,0,14,0,4,0,386,4,3,0,15,0,1,1,252,0,1,0,17,1,1,0,13,7,1,0,387,2,2,0,388,2,1,1,137,21,1,1,425,1,1,0,421,0,1,0,10,13,1,0,12,0,2,0,13,30,1,1,201,0,1,0,105,0,26,2,388,25,4,4,132,14,1,0,13,5,7,0,387,11,2,0,16,1,3,0,388,11,2,2,132,1,1,0,17,20,6,0,14,0,1,0,12,12,1,1,304,0,1,1,343,20,1,0,14,4,20,0,312,4,1,0,295,0,1,1,292,5,1,0,14,3,1,1,174,0,1,0,14,547,2,2,76,3,1,0,79,1772,1,1,46,0,1,1,41,0,1,0,31,610,4,4,191,4,16,3,147,10,15,0,183,7,13,1,181,0,7,7,132,0,8,6,141,0,9,9,135,0,2,2,134,9,1,0,171,9732,8,0,101,566,1,0,78,406,1,0,18],[17,2,1,388,3,3,3,252,0,1,0,387,0,1,0,638,5,1,0,137,2,1,1,142,0,1,0,182,5,2,0,638,1,1,0,638,2,3,3,134,8,1,0,137,2,1,0,33,113,1,0,34,0,1,1,148,2,1,0,177,16,1,0,30,4,5,0,578,17,1,1,394,96,2,0,74,2,4,0,16,0,1,1,562,142,1,0,18,0,1,0,183,5,1,0,17,2,1,0,541,2,2,2,539,8,1,0,470,2,1,0,18,513,6,0,81,99,1,0,59,2,1,0,17,0,1,0,103,7,1,1,137,1,1,1,464,3,1,1,343,2,1,1,452,7,1,1,14,19,4,0,12,0,1,1,404,15,13,0,386,9,1,0,388,11,1,1,252,0,4,0,387,4,3,0,16,1,1,0,416,1,1,0,14,7,1,1,388,2,1,0,205,0,1,0,137,26,1,1,422,0,1,0,11,13,1,0,13,0,2,0,14,31,1,1,41,2,1,0,205,0,1,0,202,0,1,1,197,0,2,0,155,0,19,5,137,43,1,0,14,5,7,0,388,11,2,0,17,1,1,0,155,0,2,1,137,14,1,0,102,20,6,0,15,0,1,0,13,34,1,0,15,4,20,0,313,4,1,1,296,6,1,1,252,4,1,0,15,552,1,0,80,1774,1,1,7,621,10,10,148,0,3,0,187,10,15,7,184,8,12,2,147,13,1,0,144,0,1,1,135,20,1,0,19,9732,8,1,102,566,1,0,79,406,1,0,19],[18,1,0,137,6,1,0,388,0,1,1,182,5,1,1,141,3,1,1,642,5,1,1,639,0,1,1,182,1,1,1,182,13,1,1,132,2,1,0,34,113,1,1,36,3,1,0,178,16,1,0,31,4,5,0,578,114,2,2,76,2,4,0,17,143,1,0,19,0,1,1,184,5,1,0,102,2,1,0,541,12,1,1,534,2,1,1,431,513,6,6,247,99,1,0,29,2,1,0,130,0,1,0,105,44,3,0,13,0,1,0,389,16,13,0,387,9,1,0,137,12,4,0,388,4,1,1,265,0,2,0,17,1,1,0,177,1,1,1,252,10,1,0,207,0,1,1,138,27,1,0,413,13,1,1,14,0,2,2,252,34,1,0,206,0,1,0,203,1,2,0,160,5,3,3,143,0,2,2,152,0,2,2,132,0,4,4,135,0,2,2,134,0,1,1,138,43,1,1,252,5,1,0,205,0,1,1,198,0,1,1,155,0,4,2,137,11,2,1,18,1,1,0,160,1,1,1,132,14,1,0,103,20,6,0,16,0,1,0,74,34,1,0,16,4,20,0,314,16,1,0,16,552,1,0,81,2406,3,0,171,17,8,8,185,10,10,10,148,13,1,0,180,21,1,0,172,9733,7,0,103,566,1,0,80,406,1,1,20],[18,1,0,132,6,1,1,137,36,1,1,35,117,1,0,179,16,1,1,7,4,5,0,578,118,4,0,18,143,1,1,245,6,1,0,103,2,1,0,541,634,1,0,30,2,1,1,135,0,1,1,41,44,3,2,14,0,1,1,390,16,1,0,105,0,12,3,388,9,1,1,134,12,4,2,137,5,2,0,18,1,1,0,190,12,1,0,33,28,1,0,414,50,1,0,145,0,1,1,148,1,2,0,163,68,1,0,206,4,1,1,152,0,1,1,141,12,1,0,19,1,1,1,161,16,1,0,59,20,2,2,265,0,4,0,17,0,1,1,76,34,1,0,17,4,20,19,291,16,1,0,17,552,1,1,82,2406,2,0,19,0,1,0,39,58,1,0,147,21,1,1,173,9733,1,1,105,0,2,2,104,0,4,0,59,566,1,0,81],[18,1,1,152,161,1,0,182,21,5,0,578,118,4,1,19,150,1,0,59,2,1,0,541,634,1,0,31,50,1,1,252,17,1,1,41,3,1,0,202,0,1,1,198,0,1,0,155,0,6,3,137,24,1,1,135,0,1,1,138,5,1,0,19,0,1,1,431,1,1,0,184,12,1,0,34,28,1,0,415,50,1,1,176,2,1,0,192,0,1,0,159,68,1,0,147,18,1,0,363,18,1,0,39,22,4,0,18,35,1,0,18,23,1,0,315,16,1,0,18,2959,1,1,189,0,1,1,188,0,1,0,40,58,1,1,148,9758,4,0,29,566,1,1,82],[180,1,0,183,21,5,1,578,119,1,0,189,0,1,0,363,0,1,1,245,150,1,0,29,2,1,0,300,634,1,1,7,72,1,1,203,1,1,0,160,3,1,1,132,0,1,1,141,0,1,1,134,31,1,0,172,2,1,1,185,12,1,1,35,28,1,0,17,53,1,0,175,0,1,1,141,68,1,1,148,18,1,0,266,18,1,0,40,22,4,1,19,35,1,0,19,23,1,0,316,16,1,0,19,2961,1,1,41,9817,4,0,30],[180,1,0,184,22,3,1,578,0,1,0,300,119,1,1,563,0,1,0,266,151,1,0,30,2,1,0,11,709,1,0,163,37,1,1,173,44,1,0,416,53,1,1,176,88,1,0,81,18,1,0,6,23,3,0,363,35,1,0,172,23,1,0,17,16,1,0,172,12779,4,0,31],[180,1,1,185,23,2,0,578,0,1,1,11,120,1,0,81,151,1,0,31,2,1,0,12,709,1,0,177,82,1,1,177,142,1,1,82,18,1,1,7,23,2,0,266,0,1,0,81,35,1,0,173,23,1,1,317,16,1,0,266,12779,4,4,7],[204,2,0,578,121,1,1,247,151,1,1,7,2,1,1,389,709,1,0,178,268,2,1,81,0,1,1,247,35,1,0,332,40,1,0,81],[204,2,0,578,986,1,0,179,269,1,1,247,36,1,0,333,40,1,1,247],[204,2,0,578,986,1,0,186,306,1,1,334],[204,2,1,578,986,1,0,147],[205,1,0,578,986,1,1,148],[205,1,0,578],[205,1,0,300],[205,1,1,11]],"numTicks":15299,"maxSelf":3118,"spyName":"gospy","sampleRate":100,"units":"samples"},"metadata":{"sampleRate":100,"spyName":"gospy","units":"samples"},"timeline":{"startTime":1624459020,"samples":[31,34,36,24,34,32,32,32,32,35,31,32,33,29,32,30,30,28,30,32,32,30,32,30,33,38,35,39,40,38,37,35,32,39,34,32,36,33,35,33,39,36,37,36,41,38,37,34,38,42,39,39,41,34,42,42,38,44,37,32,41,43,40,38,37,38,35,37,32,38,33,33,39,33,36,37,39,41,32,31,39,40,40,32,37,38,36,37,42,36,42,38,41,35,37,37,40,37,37,42,38,39,41,30,34,39,43,39,41,40,41,41,44,43,43,40,38,39,35,37,37,36,36,39,37,39,41,37,40,41,39,39,37,37,42,40,39,35,44,50,47,41,38,42,41,50,37,46,35,37,37,43,40,40,45,41,42,40,44,41,41,43,48,40,43,45,43,41,45,45,44,41,36,38,41,44,49,46,43,45,41,42,42,41,41,43,38,42,40,44,43,49,45,43,41,39,45,46,42,44,41,42,44,50,46,44,47,42,42,43,49,40,38,43,42,48,43,45,38,44,46,43,48,43,48,43,43,42,52,44,48,45,51,45,47,42,45,45,46,43,54,60,61,56,63,58,60,64,60,62,53,46,48,44,47,48,44,47,48,49,45,48,46,49,52,44,50,45,49,46,45,50,50,56,46,55,56,55,49,45,53,47,51,51,53,47,45,45,52,52,51,50,48,45,46,51,50,63,65,50,45,50,56,61,63,57,52,49,54,58,49,53,52,45,54,44,55,51,49,53,53,48,54,47,54,52,57,51,51,53,50,49,53,52,49,52,51,48,47,50,53,53,54,49,43,49,47,45,52,52,52,57,52,62,54,54,54,64,49,52,0],"durationDelta":10}}`
)

type ProfileHandler struct {
	*Router

	logger *zap.Logger
}

func NewProfileHandler(logger *zap.Logger, router *Router) {
	h := &ProfileHandler{
		Router: router,
		logger: logger.With(zap.String("handler", "profile")),
	}

	h.HandlerFunc(http.MethodGet, ProfileRenderPath, h.render)
}

func (h *ProfileHandler) render(w http.ResponseWriter, r *http.Request) {
	w.Header().Set("Content-Type", "application/json")
	w.Write([]byte(testBody))
}
